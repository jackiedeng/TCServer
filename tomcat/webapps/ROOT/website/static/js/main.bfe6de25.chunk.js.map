{"version":3,"sources":["api/api.jsx","util/PageJumpUtil.jsx","Component/Frame/StarsFrame.jsx","util/util.jsx","pages/Home/App.jsx","pages/Default/App.jsx","pages/TagDetail/App.jsx","pages/SketchStudio/App.jsx","pages/SketchStudio/DrawBoard.jsx","pages/TrainList/App.jsx","pages/Upload/Upload.jsx","pages/TagManage/App.jsx","router/Router.jsx","serviceWorker.js","index.js"],"names":["sysErrCallback","ret","message","error","mixData","url","data","subKey","key","_queryData","succ","hostUrl","console","log","fetch","method","mode","headers","Accept","content-type","then","response","text","result","jsonResult","JSON","parse","e","catch","apiImageFullUrl","apiGetAllTagList","a","b","apiUploadImage","fileName","tags","suc","formData","FormData","append","body","_PostData","stringify","apiQueryAllMarkTag","type","pageList","jump2page","page","query","window","open","Header","Menu","SubMenu","Layout","Content","Footer","StartFrame","this","props","markKey","react_default","createElement","layout","className","menu","theme","defaultSelectedKeys","defaultSelect","style","lineHeight","onClick","item","keyPath","Item","padding","breadcrumb","margin","subTitle","background","minHeight","children","textAlign","Component","textButton","App","state","visible","addNewTagSwitch","tagList","newTagName","newTagKey","queryForAllTag","_this","setState","popconfirm_default","title","poolName","onConfirm","poolKey","success","onCancel","okText","cancelText","href","_this2","render","imgPoolKey","dataIndex","renderDelteTag","_this3","StarsFrame","table_default","width","dataSource","columns","modal","onOk","handleOk","bind","handleCancel","input","value","placeholder","onChange","target","marginTop","tagname","Card","Meta","watchImageDetailVisiable","watchImageDetailItem","imageFolderList","tagKey","tagDetail","folderKey","imageList","index","size","total","urlPrase","location","queryForImageFolder","queryForTagDetail","queryForImageListByFolderKey","markImgRecord","folder","tag","isSelectFolder","apiTagContainsImageListQuery","concat","path","tagId","splice","folderName","info","map","es_select","Option","loadMore","length","height","es_button","reload","minWidth","dropdownMatchSelectWidth","renderForSelect","list","grid","justify","gutter","column","hasMore","renderItem","card","extra","isItemMarked","color","imageName","es_switch","checkedChildren","icon","unCheckedChildren","checked","markByTag","onSwitchClick","imgId","src","thumbnail","backgroundColor","fileFullPath","name","filePath","apiRemoveTagToImage","Tag","CheckableTag","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addNewMarkSiwtch","newMarkName","newMarkColor","recordId","recordDetail","image","Image","markedImage","maxImageSize","stageWidth","stageHeight","imageWidth","imageHeight","isTouching","lastPoint","pointWidth","previewWidth","previewHeight","brushs","allBrushs","selectBrush","handleDragStart","pointFromEvent","handleDragEnd","drawPointTo","handleDragMove","queryForRecordRetail","reloadBrush","queryImage","queryForTags","allBrushSet","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","brush","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","selectItem","push","evt","point","x","layerX","y","layerY","context","shapeContext","strokeStyle","globalCompositeOperation","tagColor","lineWidth","beginPath","moveTo","lineTo","closePath","stroke","updatex","updatey","updateWidth","Math","abs","updateHeight","imgData","getImageData","theColor","sColor","toLowerCase","r","g","test","sColorNew","i","slice","sColorChange","parseInt","hex2rgb","len","putImageData","updateContext","imageNode","getContext","drawImage","offCanvas","previewNode","clearRect","_this4","imgFilePath","onload","doc","getSize","wscale","hscale","scale","stageNode","on","document","lineJoin","crossOrigin","_this5","imageInfo","ReactKonva","ref","node","cropWidth","cropHeight","marginBottom","slider","step","defaultValue","marginLeft","renderForBrushs","onUploadFileCallBack","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","tagName","dataurl","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","loading","toDataURL","dataURLtoBlob","destroy","_this6","alpha","_this7","newTag","ext","es_popconfirm","reset","es_table","colums","encodeURIComponent","router","BrowserRouter","Switch","Route","component","TagManage","Train","TagDetail","Sketch","Home","Boolean","hostname","ReactDOM","Router","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bfe6de25.chunk.js","sourcesContent":["import React, { Component}  from 'react';\nimport message from \"antd/lib/message\"\nimport 'whatwg-fetch'\n\nvar ISJSONP = true;\n\nexport function sysErrCallback(ret) {\n    // console.error(ret);\n    if (ret) {\n        message.error('error',2000);\n    } else {\n        message.error('网络或系统异常',2000);\n    }\n}\n\n\nexport function getCurrentHost(){\n\n    // return 'http://localhost:8080'\n    return ''\n}\n\nexport function mixData(url,data) {\n\n    var subKey = \"\";\n\n    for(var key in data){\n\n        if(subKey == \"\"){\n            subKey += \"?\"+key+\"=\"+data[key];\n        }else{\n            subKey += \"&\"+key+\"=\"+data[key];\n        }\n    }\n\n    return url+subKey;\n}\n\nfunction _queryData(url,data, succ) {\n\n    var hostUrl = getCurrentHost()+url;\n\n    hostUrl = mixData(hostUrl,data);\n\n    console.log(\"url:::\",hostUrl);\n\n    fetch(hostUrl, {\n        method: \"GET\",\n        mode: \"cors\",\n        headers:{\n            'Accept':'application/json,text/plain,*/*',\n            \"content-type\":\"text/html;charset=utf-8\"\n        }\n\n    }).then(response => response.text())\n        .then(result => {\n            // 在此处写获取数据之后的处理逻辑\n            console.log(result);\n            var jsonResult  = result;\n            try{\n                jsonResult = JSON.parse(jsonResult);\n            }catch(e){\n                jsonResult = result;\n            }\n            succ(jsonResult);\n\n        }).catch(function (e) {\n        console.log(\"fetch fail\");\n        sysErrCallback(e);\n    });\n}\n\nfunction _PostData(url,data, succ) {\n\n    var hostUrl = getCurrentHost()+url;\n\n    // hostUrl = mixData(hostUrl,data);\n    const formData = new FormData()\n    for(var key in data){\n        formData.append(key,data[key]);\n    }\n    // formData.append('file', file)\n\n    console.log(\"url:::\",hostUrl);\n\n    fetch(hostUrl, {\n        method: \"POST\",\n        body:formData,\n        mode: \"no-cors\"\n\n    }).then(response => response.text())\n        .then(result => {\n            // 在此处写获取数据之后的处理逻辑\n            console.log(result);\n            var jsonResult  = result;\n            try{\n                jsonResult = JSON.parse(jsonResult);\n            }catch(e){\n                jsonResult = result;\n            }\n            succ(jsonResult);\n\n        }).catch(function (e) {\n        console.log(\"fetch fail\");\n        sysErrCallback(e);\n    });\n}\n\n\nfunction _queryDataOut(url,data, succ) {\n\n    fetch(url, {\n        method: \"GET\",\n        mode: \"cors\",\n        headers:{\n            'Accept':'application/json,text/plain,*/*',\n            \"content-type\":\"text/html;charset=utf-8\"\n        }\n\n    }).then(response => response.text())\n        .then(result => {\n            // 在此处写获取数据之后的处理逻辑\n            console.log(result);\n            var jsonResult  = result;\n            try{\n                jsonResult = JSON.parse(jsonResult);\n            }catch(e){\n                jsonResult = result;\n            }\n            succ(jsonResult);\n\n        }).catch(function (e) {\n        console.log(\"fetch fail\");\n        sysErrCallback(e);\n    });\n\n}\n\nexport function apiImageFullUrl(url){\n\n    return getCurrentHost()+url;\n}\n\n\n//查询所有\nexport function apiGetAllTagList(ret){\n    _queryData(\"/request/pool/queryAll.do\",{a:1,b:2},ret);\n}\n\n\n//删除\nexport function apiDeleteTagByKey(key,ret){\n\n    _queryData(\"/request/pool/delete.do\",{poolKey:key},ret);\n}\n\n//新增标签\nexport function apiCreateNewTag(tagname,tagkey,ret){\n    _queryData(\"/request/pool/add.do\",{poolKey:tagkey,poolName:tagname},ret);\n}\n\n//请求图片资源目录\nexport function apiImageFolderQuery(ret) {\n\n    _queryData(\"/imageFolder/queryFolder.do\",{},ret);\n}\n\n//请求标签详情\nexport function apiQueryTagDetail(tagKey,suc) {\n\n    _queryData(\"/imageFolder/queryTagDetail.do\",{tagId:tagKey},suc);\n}\n\n//请求图片资源列表\nexport function apiQueryForImageListForFolder(folder,index,size,tag,suc){\n\n    _queryData(\"/imageFolder/query.do\",{path:folder,index:index,size:size,tag:tag},suc);\n}\n\n//给图片打标\nexport function apiAddTagToImage(name,path,tag,suc){\n\n    _queryData(\"/tag/insertTagToImage.do\",{imageName:name,filePath:path,tag:tag},suc);\n}\n\n//去除标\nexport function apiRemoveTagToImage(name,tag,suc) {\n\n    _queryData(\"/tag/removeTagToImage.do\",{imageName:name,tag:tag},suc);\n}\n\n//已经打标的图片列表\nexport function apiTagContainsImageListQuery(tag,index,size,suc) {\n    _queryData(\"/tag/queryList.do\",{tag:tag,index:index,size:size},suc);\n}\n\n\n\n//上传图片\nexport function apiUploadImage(data,fileName,tags,suc) {\n\n    _PostData(\"/imageUpload.do\",{data:data,fileName:fileName,tags:JSON.stringify(tags)},suc);\n}\n\n//查询单张图片记录\nexport function queryImgDetail(fileName,suc){\n\n    _queryData('/tag/queryDetail.do',{imageName:fileName},suc)\n}\n\n//新增标签\nexport function apiNewOrUpdateMarkTag(tagName,tagKey,color,ext,suc){\n\n    console.log(tagName,tagKey,encodeURIComponent(color),ext);\n\n    _queryData(\"/request/markTag/update.do\",{tagName:tagName,tagKey:tagKey,tagColor:encodeURIComponent(color),ext:encodeURIComponent(ext)},suc);\n}\n\n//查询标签\nexport function apiQueryAllMarkTag(suc) {\n\n    _queryData('/request/common/queryAll.do',{type:\"markTag\"},suc)\n}\n\n//删除标注\nexport function apiDeleteMarkTag(tagName,suc) {\n\n    _queryData('/request/markTag/delete.do',{tagName:tagName},suc);\n\n}","import React from 'react';\nimport {mixData} from '../api/api'\n\nexport var pageList = {\n\n    home:\"/\",\n    tagDetail:\"/imgPool\",\n    sketchStudio:\"/sketch\",\n    tagManage:\"/datatag\",\n    train:\"/train\"\n};\n\n\nexport function jump2page(page,query){\n\n    var url = mixData(page,query);\n\n    console.log(\"jump->\",url)\n\n    window.open(url,\"_self\");\n\n}","import React, {Component} from 'react';\nimport {Breadcrumb,Menu,Layout} from 'antd'\nimport \"./style.css\"\nconst SubMenu = Menu.SubMenu;\nconst { Header, Content, Footer } = Layout;\n\n\n\nclass StartFrame extends Component {\n\n    defaultSelect(){\n\n        if(this.props.markKey){\n            return [this.props.markKey];\n        }\n    }\n\n    render() {\n        return (\n\n            <Layout className=\"layout\">\n                <Header>\n                    <div className=\"logo\">FIA管理系统</div>\n                    <Menu\n                        theme=\"dark\"\n                        mode=\"horizontal\"\n                        defaultSelectedKeys={this.defaultSelect()}\n                        style={{ lineHeight: '64px' }}\n                        onClick={(item,key,keyPath)=>{\n\n                            // console.log('>>>',item.path,item);\n                            window.open(\"/\"+item.key,'_self');\n\n\n                        }}\n                    >\n                        <Menu.Item key=\"dataset\">训练数据集</Menu.Item>\n                        <Menu.Item key=\"datatag\">标注管理</Menu.Item>\n                        <Menu.Item key=\"train\">模型任务</Menu.Item>\n                    </Menu>\n                </Header>\n                <Content style={{ padding: '0 50px' }}>\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item>{this.props.subTitle}</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\n                        <div className='main-content-layout'>\n                        {\n                            this.props.children\n                        }\n                        </div>\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>\n                     S.T.A.R.S ©2018\n                </Footer>\n            </Layout>\n        );\n    }\n}\n\nexport default StartFrame;","import React, { Component}  from 'react';\nimport \"./gstyle.css\"\n/* 点击文字 */\nexport function textButton(text,ret) {\n\n    return (<div className=\"g-text-button\" onClick={() => {\n        ret();\n    }}>{text}</div>);\n\n}\n\n\nexport function hex2rgb(color){\n\n    var sColor = color.toLowerCase();\n    var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\n\n    var color = {r:0,g:0,b:0};\n\n    if(sColor && reg.test(sColor)){\n\n        if(sColor.length === 4){\n            var sColorNew = \"#\";\n            for(var i=1; i<4; i+=1){\n                sColorNew += sColor.slice(i,i+1).concat(sColor.slice(i,i+1));\n            }\n            sColor = sColorNew;\n        }\n        //处理六位的颜色值\n        var sColorChange = [];\n        for(var i=1; i<7; i+=2){\n            sColorChange.push(parseInt(\"0x\"+sColor.slice(i,i+2)));\n        }\n\n        // return \"rgb(\" + sColorChange.join(\",\") + \")\";\n\n        if(sColorChange.length ==3){\n            color.r = sColorChange[0];\n            color.g = sColorChange[1];\n            color.b = sColorChange[2];\n        }\n\n    }\n\n    return color;\n};","import React, {Component} from 'react'\nimport Table from 'antd/lib/table'\nimport Popconfirm from 'antd/lib/popconfirm'\nimport {Modal,Input} from  'antd'\nimport StarsFrame from '../../Component/Frame/StarsFrame'\nimport message from \"antd/lib/message\"\nimport \"./home.css\"\nimport {textButton} from \"../../util/util\"\nimport {apiGetAllTagList,apiDeleteTagByKey,apiCreateNewTag} from \"../../api/api\"\nimport {jump2page,pageList} from \"../../util/PageJumpUtil\"\n\nclass App extends Component {\n\n    state ={\n\n        visible:false,\n        addNewTagSwitch:false,\n        tagList:[],\n        newTagName:\"\",\n        newTagKey:\"\"\n    };\n\n    componentDidMount() {\n\n        this.queryForAllTag();\n    }\n\n    queryForAllTag(){\n\n        console.log(\"requet:\");\n        var _this = this;\n        apiGetAllTagList(function(ret){\n\n            console.log(\">>\",ret[\"data\"],ret);\n            _this.setState({tagList:ret.data});\n\n        })\n\n    }\n\n    renderDelteTag(item){\n        var _this =this;\n        return <Popconfirm title={\"确认删除数据集\"+item.poolName+\"?\"}\n                             onConfirm={()=>{\n\n                                 apiDeleteTagByKey(item.poolKey,function(ret){\n\n                                     message.success(\"删除成功\");\n\n                                     _this.queryForAllTag();\n\n                                 })\n                                }\n                             }\n                             onCancel={()=>{\n                             }\n                             }\n                             okText=\"Yes\"\n                             cancelText=\"No\">\n                     {\n                         <a href=\"#\">删除</a>\n                     }\n                 </Popconfirm>\n\n    }\n\n    columns () {\n\n        return [{\n            title: '数据集名称',\n            // dataIndex: 'poolName' // String-based value accessors!\n            render:item=><a onClick={()=>{\n\n                jump2page(pageList.tagDetail,{imgPoolKey:item.poolKey})\n            }\n            }>{item.poolName}</a>\n        }, {\n            title: '图片数量',\n            dataIndex:\"imgCount\"\n        }\n        , {\n                title: '操作',\n                render: item=><div>{\n                    this.renderDelteTag(item)\n                }</div> // Custom cell components!\n            }\n        ]\n\n    }\n\n\n    render() {\n\n        return (\n            <StarsFrame markKey='dataset'>\n                <div className=\"home-tool-bar\">\n                    {\n                        textButton(\"新增数据集\", () => {\n\n                            this.setState({visible: true});\n                        })\n                    }\n\n                    {/*{*/}\n                        {/*textButton(\"去标注\", () => {*/}\n\n                            {/*jump2page(pageList.sketchStudio,{});*/}\n                        {/*})*/}\n                    {/*}*/}\n                </div>\n\n                <Table style={{width:'100%'}}\n                    dataSource={this.state.tagList}\n                    columns={this.columns()}\n                />\n\n                <Modal\n                    title=\"新增数据集\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk.bind(this)}\n                    onCancel={this.handleCancel.bind(this)}\n                >\n\n                    <Input value={this.state.newTagName}\n                           placeholder=\"数据集名称\"\n                           onChange={(value)=>{\n\n                               this.setState({newTagName:value.target.value})\n\n                           }}/>\n\n                    <Input value={this.state.newTagKey}\n                           style={{marginTop:10}}\n                           placeholder=\"数据集key\"\n                           onChange={(value)=>{\n\n                               // console.log(value.target.value);\n                               this.setState({newTagKey:value.target.value})\n\n                           }}/>\n\n                </Modal>\n\n            </StarsFrame>\n        )\n    }\n\n    handleOk(){\n\n        console.log(\"create new tag:\",this.state.newTagName,this.state.newTagKey)\n\n        var _this = this;\n        apiCreateNewTag(this.state.newTagName,this.state.newTagKey,function(ret){\n\n            message.success(\"创建成功\");\n            _this.queryForAllTag();\n        })\n\n        this.handleCancel();\n    }\n\n    handleCancel(){\n\n        this.setState({visible:false})\n    }\n}\n\nexport default App;","import React, {Component} from 'react';\nimport StarsFrame from '../../Component/Frame/StarsFrame'\nclass App extends Component {\n    render() {\n        return (\n            <StarsFrame>\n                404's page\n            </StarsFrame>\n        )\n    }\n}\n\nexport default App;","import React, {Component} from 'react';\nimport StarsFrame from '../../Component/Frame/StarsFrame'\nimport {textButton} from \"../../util/util\";\nimport \"./detail.css\"\nimport {apiImageFolderQuery,\n    apiQueryTagDetail,\n    apiQueryForImageListForFolder,\n    apiImageFullUrl,\n    apiAddTagToImage,\n    apiRemoveTagToImage,\n    apiTagContainsImageListQuery\n} from \"../../api/api\"\nimport { Tag,Icon,Switch,Modal,Select,message,List,Card,Button} from 'antd';\nimport {jump2page,pageList} from \"../../util/PageJumpUtil\"\nimport urlPrase  from 'url-parse';\nconst { Meta } = Card;\n\n\nclass App extends Component {\n\n    state = {\n\n        watchImageDetailVisiable:false,\n        watchImageDetailItem:{},\n        imageFolderList:[],\n        tagKey:\"\",\n        tagDetail:{poolName:\"\",poolKey:\"\"},\n        folderKey:\"none\",\n\n        imageList:[],\n        index:0,\n        size:50,\n        total:0\n    }\n\n    componentDidMount() {\n\n\n        var url = urlPrase(window.location.href,true);\n        console.log('>>>>',url.query);\n\n        this.state.tagKey = url.query.imgPoolKey;\n\n        this.queryForImageFolder();\n\n        this.queryForTagDetail();\n\n        this.queryForImageListByFolderKey();\n\n    }\n\n    isSelectFolder(){\n\n        return this.state.folderKey == \"none\"?true:false;\n    }\n\n    isItemMarked(item){\n        if(item.markImgRecord){\n            return true;\n        }else{\n            return false;\n        }\n    }\n    queryForImageListByFolderKey(){\n\n        var _this = this;\n        if(!this.isSelectFolder()) {\n\n            apiQueryForImageListForFolder(\n                this.state.folderKey,\n                this.state.index*this.state.size,\n                this.state.size,\n                this.state.tagKey,\n                function(ret){\n\n                    // var originList = JSON.parse(JSON.stringify(_this.state.imageList));\n                    // originList = originList.concat(ret.data);\n\n                    _this.setState({\n                        imageList:_this.state.imageList.concat(ret.data),\n                    total:ret.total,\n                    index:_this.state.index+1\n                    });\n\n                })\n        }else{\n\n            //请求自己的图片\n            apiTagContainsImageListQuery(this.state.tagKey,\n                            this.state.index*this.state.size,\n                            this.state.size,\n                function(ret){\n\n                console.log(\"own\",ret);\n                    _this.setState({\n                        imageList:_this.state.imageList.concat(ret.data),\n                        total:ret.total,\n                        index:_this.state.index+1\n                    });\n                }\n                )\n\n        }\n    }\n\n\n    queryForTagDetail(){\n\n        if(this.state.tagKey){\n\n            var _this = this;\n            apiQueryTagDetail(this.state.tagKey,function(ret){\n\n                console.log(\"detail\",ret);\n\n                _this.setState({tagDetail:ret.data});\n\n            });\n\n        }\n    }\n\n    queryForImageFolder(){\n\n        if(!this.state.tagKey){\n            message.error(\"tag不能为空\");\n        }\n\n        var _this = this;\n        apiImageFolderQuery(function(ret){\n\n            try {\n                ret.data.splice(0, 0, {\n                    folderName: \"标签所有\",\n                    info: \"none\"\n                });\n            }catch (e){\n                console.log(e);\n            }\n\n            _this.setState({imageFolderList:ret.data});\n\n        })\n\n    }\n\n    renderForSelect(){\n\n        return this.state.imageFolderList.map((item,index)=>{\n\n            return <Select.Option value={item.info}>{item.folderName}</Select.Option>\n        })\n\n    }\n\n    render() {\n\n        var _this = this;\n\n        const loadMore = (this.state.total > this.state.imageList.length)? (\n            <div style={{ textAlign: 'center', marginTop: 12, height: 32, lineHeight: '32px' }}>\n                <Button onClick={this.queryForImageListByFolderKey.bind(this)}>loading more</Button>\n            </div>\n        ) : null;\n\n        return (\n            <StarsFrame subTitle={<a onClick={()=>{window.location.reload()}}>{'数据集详情页面['+this.state.tagDetail.poolName+\"/\"+this.state.tagDetail.poolKey+']'}</a>}>\n\n                <div className=\"home-tool-bar\">\n                    <Select\n                        value={this.state.folderKey}\n                        style={{ minWidth: 120 }} dropdownMatchSelectWidth={false}\n                        onChange={(value)=>{\n\n                            // console.log(value);\n                            _this.setState({folderKey:value,\n                                index:0,\n                                imageList:[]},()=>{\n\n                                _this.queryForImageListByFolderKey();\n                            });\n\n                        }}\n                    >\n                        {\n                        this.renderForSelect()}</Select>\n\n                    {\n                        textButton(this.state.imageList.length+\"/\"+this.state.total,()=>{})\n                    }\n                </div>\n\n                <div>\n\n                    <List\n                        grid={{justify:\"start\",gutter: 20, column: 5 }}\n                        dataSource={this.state.imageList}\n                        loadMore={loadMore}\n                        hasMore={true}\n                        renderItem={(item,index) => (\n                            <List.Item>\n                                <Card\n                                    extra={\n                                        this.isItemMarked(item)? <Tag color=\"green\">已标注</Tag>:<div/>\n\n                                    }\n                                    title={index+\"/\"+item.imageName}>\n\n\n                                    <Switch checkedChildren={<Icon type=\"check\" />}\n                                            unCheckedChildren={<Icon type=\"close\" />}\n                                            checked={item.markByTag}\n                                            onChange={(value)=>{\n                                                _this.onSwitchClick(value,item)\n                                            }}\n                                    />\n\n                                    {\n                                        // this.isSelectFolder()?<Button style={{marginLeft:5}} onClick={()=>{\n                                        //\n                                        //     jump2page(pageList.sketchStudio,{imgId:item.imageName})\n                                        //\n                                        // }\n                                        // }>去标注</Button>:<div/>\n                                        this.isSelectFolder()?textButton(\"去标注\",()=>{\n                                            jump2page(pageList.sketchStudio,{imgId:item.imageName})\n\n                                        }):<div/>\n                                    }\n\n                                    <div\n                                        className=\"detail-image-display-space\"\n                                        style={{marginTop:5}}\n                                        onClick={\n                                            ()=> {\n\n                                                _this.setState({\n                                                    watchImageDetailVisiable: true,\n                                                    watchImageDetailItem: item\n                                                })\n                                            }\n                                    }>\n\n                                <img height={130} src={apiImageFullUrl(item.thumbnail)} />\n                                    </div>\n\n\n\n                                </Card>\n                                {/*<Card*/}\n                                    {/*hoverable*/}\n                                    {/*style={{ width: 240 ,marginRight:10,marginTop:10}}*/}\n                                    {/*cover={<img height={200} alt={item.imageName} src={apiImageFullUrl(item.thumbnail)} />}*/}\n                                    {/*actions={[<Icon type=\"setting\" />, <Icon type=\"edit\" />, <Icon type=\"ellipsis\" />]}*/}\n                                {/*>*/}\n                                    {/*<Meta*/}\n                                        {/*title={<div>{this.isItemMarked(item)? <Tag color=\"green\">已标注</Tag>:<div/>}{item.imageName}</div>}*/}\n                                        {/*description=\"www.instagram.com\"*/}\n                                    {/*/>*/}\n                                {/*</Card>*/}\n                            </List.Item>\n                        )}\n                    />\n                </div>\n\n\n                <Modal\n                    title={\"图片详情\"+this.state.watchImageDetailItem.info}\n                    visible={this.state.watchImageDetailVisiable}\n                    width={1300}\n                    onOk={this.handleCancel.bind(this)}\n                    onCancel={this.handleCancel.bind(this)}\n                >\n                    <div className='tag-detail-image-preview'>\n\n                        <div>\n                    <img width={this.isItemMarked(this.state.watchImageDetailItem)?600:1000} src={apiImageFullUrl(this.state.watchImageDetailItem.info)} />\n                        </div>\n\n                    {\n                        this.isItemMarked(this.state.watchImageDetailItem)?<div><img width={600}\n                                                                                style={{backgroundColor:'#000'}}\n                                                                                     src={apiImageFullUrl(this.state.watchImageDetailItem.markImgRecord.fileFullPath)}/></div>:<div/>\n\n                    }\n                    </div>\n\n                </Modal>\n\n            </StarsFrame>\n        )\n    }\n\n\n    onSwitchClick(value,item){\n\n        // console.log(\"click on\",value,item);\n\n        if(item.imageName!=null) {\n\n            var _this =this;\n\n            if (value === true) {\n                //add tag\n                apiAddTagToImage(item.imageName,item.info,this.state.tagKey,function (ret) {\n\n                    item.markByTag = true;\n\n                    _this.setState(_this.state,()=>{\n                        message.success(\"添加成功!\");\n                    });\n                });\n\n            } else {\n\n                //remove tag\n                apiRemoveTagToImage(item.imageName,this.state.tagKey,function (ret) {\n\n                    item.markByTag = false;\n                    _this.setState(_this.state,()=>{\n                        message.success(\"去除成功\");\n                    });\n                })\n            }\n        }\n    }\n\n    handleCancel(){\n\n        this.setState({watchImageDetailVisiable:false});\n    }\n}\n\nexport default App;","import React, {Component} from 'react';\nimport StarsFrame from '../../Component/Frame/StarsFrame'\nimport {Popconfirm,Modal, Tag, Card, Button, Radio, Slider, Switch, Input} from 'antd';\nimport { Stage,Image, Layer, Rect, Text,Circle,Shape} from 'react-konva';\nimport {hex2rgb, textButton} from '../../util/util'\nimport Konva from 'konva';\nimport './sketchStyle.css';\nimport DrawBoard from './DrawBoard.jsx';\nimport {apiQueryAllMarkTag,apiImageFullUrl,queryImgDetail,apiUploadImage} from \"../../api/api\";\nimport message from \"antd/lib/message\";\nimport urlPrase  from 'url-parse';\n//https://konvajs.github.io/docs/overview.html\nconst { CheckableTag } = Tag;\n\n\nclass App extends Component {\n\n    state = {\n        addNewMarkSiwtch:false,\n        newMarkName:\"\",\n        newMarkColor:\"\",\n\n        recordId:\"\",\n        recordDetail:{},\n\n        image: new window.Image(),\n        markedImage: new window.Image(),\n\n        maxImageSize:1000,\n        stageWidth:1000,\n        stageHeight:1000,\n        imageWidth: 100,\n        imageHeight: 100,\n        isTouching:false,\n        lastPoint:{},\n        pointWidth:30,\n        previewWidth:1000,\n        previewHeight:1000,\n\n        brushs:[],\n        allBrushs:[],\n\n        selectBrush:0,\n    }\n\n    componentDidMount() {\n\n        this.queryForRecordRetail();\n    }\n\n    constructor(){\n        super();\n\n        var url = urlPrase(window.location.href,true);\n        console.log('>>>>',url);\n\n        this.state.recordId = url.query.imgId;\n\n    }\n\n\n\n    queryForTags(){\n\n        apiQueryAllMarkTag((ret)=>{\n\n            this.setState({allBrushs:ret.data},()=>{\n\n                this.reloadBrush(()=>{\n\n                    this.queryImage();\n                });\n\n            });\n        })\n    }\n\n    queryForRecordRetail(){\n\n        queryImgDetail(this.state.recordId,(ret)=>{\n\n            console.log(\"detail:\",ret);\n\n            this.setState({recordDetail:ret.data},()=>{\n                this.queryForTags();\n            });\n\n        })\n    }\n\n    reloadBrush(ret){\n\n        console.log(\"reload brush\");\n        if(this.state.allBrushs.length > 0 && this.state.recordDetail.markImgRecord){\n\n            var allBrushSet = {};\n            for (var brush of this.state.allBrushs) {\n                allBrushSet[brush.tagKey] = brush;\n            }\n\n            var brushs = [];\n            for(var selectItem of this.state.recordDetail.markImgRecord.tag){\n\n                if(allBrushSet[selectItem]){\n\n                    brushs.push(allBrushSet[selectItem]);\n                }\n            }\n\n            console.log(\"....\",brushs,allBrushSet);\n            this.setState({brushs:brushs},()=>{\n                ret()\n            });\n\n        }else{\n            ret();\n        }\n    }\n\n    pointFromEvent(evt){\n        var point =  {};\n        point.x = evt.evt.layerX;\n        point.y = evt.evt.layerY;\n        return point;\n    }\n\n\n\n    drawPointTo(point){\n\n        var context =  this.shapeContext;//this.shapeNode.getContext();\n        if(this.state.selectBrush === -1){\n            context.strokeStyle = \"#fff\";\n            this.shapeContext.globalCompositeOperation='destination-out';\n        }else {\n            context.strokeStyle = this.state.brushs[this.state.selectBrush].tagColor;\n            this.shapeContext.globalCompositeOperation='source-over';\n        }\n\n        context.lineWidth = this.state.pointWidth;\n\n        context.beginPath();\n        context.moveTo( this.state.lastPoint.x, this.state.lastPoint.y);\n        context.lineTo(point.x,point.y);\n        context.closePath();\n        context.stroke();\n\n        //get update rect\n        var updatex = this.state.lastPoint.x > point.x?point.x:this.state.lastPoint.x;\n        var updatey = this.state.lastPoint.y > point.y?point.y:this.state.lastPoint.y;\n        var updateWidth = Math.abs(this.state.lastPoint.x-point.x);\n        var updateHeight = Math.abs(this.state.lastPoint.y-point.y);\n\n        updatex-=this.state.pointWidth/2;\n        updatey-=this.state.pointWidth/2;\n        updateWidth+=this.state.pointWidth*1.5;\n        updateHeight+=this.state.pointWidth*1.5;\n\n        this.state.lastPoint = point;\n\n        // console.log(\"updaterect\",updatex,updatey,updateWidth,updateHeight);\n\n        if(this.state.selectBrush >=0 ) {\n\n            var imgData = this.shapeContext.getImageData(updatex, updatey, updateWidth, updateHeight);\n\n            var theColor = hex2rgb(this.state.brushs[this.state.selectBrush].tagColor);\n\n            console.log(\"thecolor\",theColor);\n\n            if (imgData) {\n                for (var i = 0, len = imgData.data.length; i < len; i += 4) {\n                    // 改变每个像素的透明度\n                    var color = imgData.data[i + 3];\n\n                    if (color > 160) {\n                        imgData.data[i] = theColor.r;\n                        imgData.data[i + 1] = theColor.g;\n                        imgData.data[i + 2] = theColor.b;\n                        imgData.data[i + 3] = 160;\n                    }\n                }\n                // 将获取的图片数据放回去。\n                this.shapeContext.putImageData(imgData, updatex, updatey);\n            }\n        }\n\n        // console.log(this.state.imageWidth,this.state.imageHeight);\n\n        this.updateContext();\n    }\n\n    updateContext(){\n\n        this.imageNode.getContext().drawImage(this.state.image,0,0,this.state.stageWidth,this.state.stageHeight);\n\n        this.imageNode.getContext().drawImage(this.offCanvas,0,0);\n\n        this.previewNode.getContext().clearRect(0,0,this.state.previewWidth,this.state.previewHeight);\n\n        this.previewNode.getContext().drawImage(this.offCanvas,0,0,this.state.stageWidth,this.state.stageHeight,\n            0,0,this.state.previewWidth,this.state.previewHeight);\n\n    }\n\n    handleDragStart = e => {\n        // console.log(\"start\",e);\n        this.state.isTouching = true;\n        this.state.lastPoint = this.pointFromEvent(e);\n    };\n\n    handleDragEnd = e => {\n        // console.log(\"end\",e);\n        this.state.isTouching = false;\n        this.drawPointTo(this.pointFromEvent(e))\n\n\n    };\n\n    handleDragMove = e => {\n\n        // console.log(this.state.isTouching,\">>>\");\n        if(this.state.isTouching) {\n            // console.log(\"move\", e);\n            this.drawPointTo(this.pointFromEvent(e))\n        }\n    };\n\n\n    queryImage(){\n\n        if(this.state.recordDetail.imgFilePath) {\n\n            this.state.image.src = apiImageFullUrl(this.state.recordDetail.imgFilePath);\n\n            this.state.image.onload = (doc) => {\n\n                console.log(\">>>>>><><><><<\",this.imageNode);\n\n                if (this.imageNode) {\n\n                    console.log(doc, this.imageNode.getSize());\n\n                    if (this.imageNode.getSize().width > this.state.maxImageSize ||\n                        this.imageNode.getSize().height > this.state.maxImageSize) {\n\n                        var wscale = this.state.maxImageSize / this.imageNode.getSize().width;\n                        var hscale = this.state.maxImageSize / this.imageNode.getSize().height;\n\n                        var scale = wscale < hscale ? wscale : hscale;\n\n                        this.state.stageWidth = scale * this.imageNode.getSize().width;\n                        this.state.stageHeight = scale * this.imageNode.getSize().height;\n\n                    } else {\n                        this.state.stageWidth = this.imageNode.getSize().width;\n                        this.state.stageHeight = this.imageNode.getSize().height;\n                    }\n\n\n                    var width = this.imageNode.getSize().width * this.imageNode.getSize().width / this.state.stageWidth;\n\n                    var height = this.imageNode.getSize().height * this.imageNode.getSize().height / this.state.stageHeight;\n\n                    this.state.previewWidth = this.state.stageWidth / 3.0;\n                    this.state.previewHeight = this.state.stageHeight / 3.0;\n\n                    this.setState({\n                        imageWidth: width,\n                        imageHeight: height,\n                    });\n                }\n\n                this.stageNode.on('mousedown touchstart', this.handleDragStart);\n                this.stageNode.on('mouseup touchend', this.handleDragEnd);\n                this.stageNode.on('mousemove touchmove', this.handleDragMove);\n\n                var offCanvas = document.createElement(\"canvas\");\n                offCanvas.width = this.state.stageWidth;\n                offCanvas.height = this.state.stageHeight;\n                this.offCanvas = offCanvas;\n                this.shapeContext = offCanvas.getContext(\"2d\");\n                this.shapeContext.lineJoin = \"round\";\n\n                //queryfor marketImage\n                if(this.state.recordDetail.markImgRecord){\n\n                    this.state.markedImage.src = apiImageFullUrl(this.state.recordDetail.markImgRecord.fileFullPath);\n                    this.state.markedImage.crossOrigin = \"Anonymous\";\n                    this.state.markedImage.onload = (doc)=>{\n\n                        console.log(\"load mark img\",doc,this.state.markedImage);\n\n                        this.shapeContext.drawImage(this.state.markedImage,0,0,this.offCanvas.width,this.offCanvas.height);\n\n                        this.setState(this.state,()=>{this.updateContext()});\n                    };\n\n\n                }\n\n            }\n        }\n    }\n\n\n    imageInfo(){\n\n        if(this.imageNode) {\n            return `image size ${this.imageNode.getSize().width} * ${this.imageNode.getSize().height}`;\n        }\n    }\n\n\n    render() {\n        return (\n            <StarsFrame subTitle=\"图片标注页面\">\n\n                <div className='sketch-play-ground'>\n\n\n                    <div className=\"sketch-space\">\n\n                        <div>{this.imageInfo()}</div>\n\n                        <div className='draw-space'>\n\n                            <Stage\n                                   width={this.state.stageWidth}\n                                   height={this.state.stageHeight}\n                                   ref={node => {\n                                       this.stageNode = node;\n                                   }}\n                            >\n                                <Layer>\n\n                                    <Image\n                                        image={this.state.image}\n                                        // width={this.state.imageWidth}\n                                        // height={this.state.imageHeight}\n                                        // cropX={1000}\n                                        // cropY={100}\n                                        cropWidth={this.state.imageWidth}\n                                        cropHeight={this.state.imageHeight}\n                                        ref={node => {\n                                            this.imageNode = node;\n\n                                        }}\n                                    />\n\n                                </Layer>\n                            </Stage>\n\n                        </div>\n\n                    </div>\n\n                    <div className='sketch-preview-space'>\n\n                        <div>preview</div>\n\n                        <div style={{width:this.state.previewWidth,\n                            height:this.state.previewHeight}}>\n                        <Stage\n                            style={{backgroundColor:'#000'}}\n                            width={this.state.previewWidth}\n                            height={this.state.previewHeight}\n                        >\n\n                            <Layer>\n                                <Shape\n                                    ref={node=>{\n                                        this.previewNode=node;\n                                    }}\n                                />\n                            </Layer>\n\n                        </Stage>\n                        </div>\n\n                        <div style={{marginTop:20,marginBottom:20}}>brush size </div>\n\n                        <Slider\n                                step={5}\n                                defaultValue={[10, 50]}\n                                value={this.state.pointWidth}\n                                onChange={(value)=>{\n\n                                    this.setState({pointWidth:value})\n\n                        }} />\n\n                        <div style={{marginTop:20,marginBottom:20}}>标注列表\n                            {textButton(\"+新增标注\",()=>{this.setState({addNewMarkSiwtch:true,\n                                newMarkName:\"newMark\",\n                                newMarkColor:\"\"})})}\n\n                            {/*{this.state.selectBrush >= 0?*/}\n\n                                {/*<Popconfirm title={\"确认删除标注?\"}*/}\n                                            {/*onConfirm={()=>{*/}\n\n                                                {/*this.state.brushs.splice(this.state.selectBrush,1);*/}\n                                                {/*this.state.selectBrush=-1;*/}\n                                                {/*this.setState(this.state);*/}\n\n                                            {/*}*/}\n                                            {/*}*/}\n                                            {/*onCancel={()=>{*/}\n                                            {/*}*/}\n                                            {/*}*/}\n                                            {/*okText=\"Yes\"*/}\n                                            {/*cancelText=\"No\">*/}\n                                    {/*{*/}\n                                        {/*textButton(\"-删除选中标注\",()=>{*/}\n\n\n                                        {/*})*/}\n                                    {/*}*/}\n                                {/*</Popconfirm>*/}\n                                {/*:<div/>}*/}\n\n                            </div>\n\n                        <div className='sketch-tool-bar'>\n\n                            <Button  type={this.state.selectBrush===-1?'primary':'default'}\n                                     style={{marginLeft:10}}\n                                     onClick={(value)=>{\n                                         this.setState({selectBrush:-1})\n                                     }}\n                            ><div>擦除</div></Button>\n\n                            {\n                                this.renderForBrushs()\n                            }\n\n                        </div>\n\n                        <div style={{marginTop:20,marginBottom:20}}>save </div>\n\n                        <Button onClick={()=>{\n\n                            this.onUploadFileCallBack()\n\n                        }}>save</Button>\n\n                     </div>\n                </div>\n\n                <Modal\n                    title=\"新增标注\"\n                    visible={this.state.addNewMarkSiwtch}\n                    onOk={this.handleOk.bind(this)}\n                    onCancel={this.handleCancel.bind(this)}\n                >\n\n                    {\n                        this.state.allBrushs.map((item,index)=>{\n\n\n                            for(var brush of this.state.brushs){\n\n                                if(brush.tagKey == item.tagKey)\n                                {\n                                    return;\n                                }\n\n                            }\n\n                            return <Button key={index+\"bucction\"} style={{marginTop:10,marginLeft:10}} onClick={()=>{\n\n                                this.state.brushs.push(item);\n\n                                this.setState(this.state);\n                            }\n                            }>{item.tagName}</Button>\n\n\n                        })\n                    }\n\n                </Modal>\n\n            </StarsFrame>\n        )\n    }\n\n    dataURLtoBlob(dataurl) {\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\n        while(n--){\n            u8arr[n] = bstr.charCodeAt(n);\n        }\n        return new Blob([u8arr], {type:mime});\n    }\n\n\n    onUploadFileCallBack(){\n\n\n        message.loading(\"保存中...\");\n\n        var data = this.offCanvas.toDataURL('image/jpg');\n\n        var blob = this.dataURLtoBlob(data);\n\n        apiUploadImage(blob,this.state.recordId,this.state.brushs,(ret)=>{\n\n            message.destroy();\n            message.success(\"保存成功\");\n            console.log(ret);\n        })\n\n    }\n\n    handleOk(){\n\n        this.handleCancel();\n    }\n\n    handleCancel(){\n        this.setState({addNewMarkSiwtch:false})\n    }\n\n    brushColums(){\n\n        const data = [{\n            title: '标注名称',\n            dataIndex: 'label',\n            key: 'label'\n        }, {\n            title: '颜色值',\n            dataIndex: 'color',\n            key: 'color',\n            render: color => (\n                <div style={{width:20,height:20,backgroundColor:color}}/>\n            )\n        }, {\n            title: '选择',\n            key:'operation',\n            render:(value,item,index)=>{\n                return <div>\n                    <Switch checked={index===this.state.selectBrush}\n                            onChange={(value)=>{\n\n                                this.setState({selectBrush:index})\n                            }\n                            }\n                    />\n\n                </div>\n            }\n        }];\n\n\n        return data;\n    }\n\n    resetContextAlphaByRect(context,x,y,width,height,alpha){\n\n        var imgData = this.shapeContext.getImageData(x, y, width, height);\n\n        if (imgData) {\n            for (var i = 0, len = imgData.data.length; i < len; i += 4) {\n                // 改变每个像素的透明度\n                var color = imgData.data[i + 3];\n\n                if (color > alpha) {\n                    imgData.data[i + 3] = alpha;\n                }\n            }\n            // 将获取的图片数据放回去。\n            this.shapeContext.putImageData(imgData, x, y);\n        }\n    }\n\n    //tool bar\n    renderForBrushs(){\n\n        return this.state.brushs.map((item,index)=>{\n\n            return <Button  type={this.state.selectBrush===index?'primary':'default'}\n                            style={{marginLeft:10}}\n                            onClick={(value)=>{\n                                     this.setState({selectBrush:index})\n                                 }}\n            >{item.tagName}\n                <div style={{backgroundColor:item.tagColor,marginBottom:5,width:30,height:10}}/></Button>\n\n        })\n    }\n}\n\nexport default App;","import React, {Component} from 'react';\n\nclass DrawBoard extends Component {\n    render() {\n        return (\n            <div>\n                DrawBoard's page\n            </div>\n        )\n    }\n}\n\nexport default DrawBoard;","import React, {Component} from 'react';\nimport StarsFrame from '../../Component/Frame/StarsFrame'\nclass App extends Component {\n    render() {\n        return (\n            <StarsFrame markKey='train'>\n\n                Train page\n            </StarsFrame>\n        )\n    }\n}\n\nexport default App;","import React, {Component} from 'react';\nimport {apiUploadImage,apiGetAllTagList} from \"../../api/api\"\n\nclass Upload extends Component {\n\n    uploadTest(){\n\n        console.log(\"update test!!!!\");\n\n        apiUploadImage({file:\"String\",fileName:\"1.txt\"},function (ret) {\n\n            console.log(ret);\n        })\n\n\n        apiGetAllTagList(function (ret) {\n\n            console.log(\"loog\",ret);\n        })\n    }\n\n\n    render() {\n        return (\n            <div onClick={()=>{\n\n                this.uploadTest()\n\n            }}>\n                onclick\n            </div>\n        );\n    }\n}\n\nexport default Upload;","import React, {Component} from 'react';\nimport StarsFrame from '../../Component/Frame/StarsFrame'\nimport {textButton} from \"../../util/util\";\nimport {Popconfirm,Input, Modal,Table,message} from \"antd\";\nimport {apiQueryAllMarkTag, apiNewOrUpdateMarkTag, apiDeleteTagByKey,apiDeleteMarkTag} from '../../api/api'\nclass App extends Component {\n\n    state={\n        visible:false,\n\n        tagList:[],\n\n        newTag:{\n            tagKey:\"\",\n            tagName:\"\",\n            tagColor:\"\",\n            ext:\"\"\n        }\n    }\n\n    componentDidMount() {\n\n        this.queryForAllTag();\n    }\n\n    queryForAllTag(){\n\n        apiQueryAllMarkTag((ret)=>{\n\n            console.log(\"query all\");\n            this.setState({tagList:ret.data});\n            console.log(ret);\n        })\n    }\n\n    reset(){\n\n        this.state.newTag = {\n            tagKey:\"\",\n            tagName:\"\",\n            tagColor:\"\",\n            ext:\"\"\n        };\n    }\n\n\n    colums(){\n\n        var _this = this;\n\n        return [{\n            title: '标签名称',\n            dataIndex: 'tagName',\n            key: 'tagName'\n        }, {\n            title: '标签key',\n            dataIndex: 'tagKey',\n            key: 'tagKey',\n        }, {\n            title: '颜色',\n            key: 'tagColor',\n            render:item=>{return <div style={{color:'#000',backgroundColor:item.tagColor}}>{item.tagColor}</div>}\n        }, {\n            title: '操作',\n            key: 'operation',\n            render:item=>{return <div>\n                <Popconfirm title={\"确认删除[ \"+item.tagName+\" ]?\"}\n                                             onConfirm={()=>{\n\n                                                 apiDeleteMarkTag(item.tagKey,()=>{\n\n                                                     console.log(\"dsadsadasdas>>>>>>\")\n                                                     message.success(\"删除成功\");\n\n                                                     _this.queryForAllTag();\n\n                                                 })\n                                             }\n                                             }\n                                             onCancel={()=>{\n                                             }\n                                             }\n                                             okText=\"Yes\"\n                                             cancelText=\"No\">\n                {\n                    textButton(\"删除\",()=>{})\n                }\n                    </Popconfirm>\n\n                    {\n                        textButton(\"编辑\",()=>{\n\n                            this.setState({visible:true,newTag: JSON.parse(JSON.stringify(item))})\n\n                        })\n                    }\n\n            </div>\n                }\n        }];\n    }\n\n    render() {\n        return (\n            <StarsFrame markKey='datatag' subTitle=\"标签管理页\">\n                <div style={{marginBottom:20}}>\n                    {textButton(\"新增标签\",()=>{\n\n                        this.reset();\n                        this.setState({visible:true})\n\n                    })}\n\n                </div>\n\n                <Table dataSource={this.state.tagList} columns={this.colums()} />\n\n\n                <Modal\n                    title=\"新增标签\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk.bind(this)}\n                    onCancel={this.handleCancel.bind(this)}\n                >\n\n                    <Input value={this.state.newTag.tagName}\n                           placeholder=\"标签名称\"\n                           onChange={(value)=>{\n\n                               this.state.newTag.tagName = value.target.value;\n                               this.setState(this.state);\n\n                           }}/>\n\n                    <Input value={this.state.newTag.tagKey}\n                           style={{marginTop:10}}\n                           placeholder=\"标签唯一key\"\n                           onChange={(value)=>{\n\n                               this.state.newTag.tagKey = value.target.value;\n                               this.setState(this.state);\n\n                           }}/>\n\n                    <Input value={this.state.newTag.tagColor}\n                           style={{marginTop:10}}\n                           placeholder=\"标签颜色 例如:#00dd00\"\n                           onChange={(value)=>{\n\n                               this.state.newTag.tagColor = value.target.value;\n                               this.setState(this.state);\n\n                           }}/>\n\n                    <div style={{width:200,height:20,marginTop:10,backgroundColor:this.state.newTag.tagColor}} />\n\n                </Modal>\n\n            </StarsFrame>\n        )\n    }\n\n    handleOk() {\n\n        apiNewOrUpdateMarkTag(this.state.newTag.tagName,\n            this.state.newTag.tagKey,\n            this.state.newTag.tagColor,\"{}\", (ret) => {\n\n                console.log(ret);\n                message.success(\"新建成功\");\n                this.queryForAllTag();\n\n            });\n\n        this.handleCancel();\n    }\n\n\n    handleCancel(){\n\n        this.setState({visible:false})\n    }\n}\n\nexport default App;","import React, {Component} from 'react';\nimport { BrowserRouter, Route, Switch,Redirect} from 'react-router-dom'\nimport {pageList} from '../util/PageJumpUtil'\nimport Home from '../pages/Home/App'\nimport Default from '../pages/Default/App'\nimport TagDetail from '../pages/TagDetail/App'\nimport Sketch from \"../pages/SketchStudio/App\"\nimport Upload from \"../pages/Upload/Upload\"\nimport Train from \"../pages/TrainList/App\"\nimport TagManage from \"../pages/TagManage/App\"\n\nclass router extends Component {\n\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n\n                    <Route path={pageList.tagManage} component={TagManage} />\n                    <Route path={pageList.train} component={Train} />\n                    <Route path={pageList.tagDetail} component={TagDetail} />\n                    <Route path={pageList.sketchStudio} component={Sketch} />\n                    <Route path={pageList.home} component={Home} />\n\n                    {/*<Redirect from='*' to='/404' />*/}\n                </Switch>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default router;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './router/Router.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}